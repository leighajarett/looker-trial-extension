"use strict";
/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2019 Looker Data Sciences, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var authSession_1 = require("./authSession");
var browserTransport_1 = require("./browserTransport");
var transport_1 = require("./transport");
var authToken_1 = require("./authToken");
/**
 * An AuthSession class intended for use with CORS requests
 *
 * This session uses `authenticate()` to establish a token via the overridden `getToken()` before
 * decorating the requests with the authentication information to call the API endpoint.
 *
 * The Looker API `login` endpoint is not available via CORS calls, so `getToken()` needs to be
 * implemented in the descendant of this class that's instantiated for the browser run-time. This
 * can be a brokered "get token" operation from a proxy server, or some other method of getting
 * the token.
 *
 */
var CorsSession = /** @class */ (function (_super) {
    __extends(CorsSession, _super);
    function CorsSession(settings, transport) {
        var _this = _super.call(this, settings, transport || new browserTransport_1.BrowserTransport(settings)) || this;
        _this.settings = settings;
        _this.activeToken = new authToken_1.AuthToken();
        return _this;
    }
    /**
     * Is the session active and authenticated?
     *
     * @returns `true` if the current token is authenticated
     */
    CorsSession.prototype.isAuthenticated = function () {
        return this.activeToken.isActive();
    };
    /**
     * This implementation calls the inheritor-implemented `getToken()` method to retrieve the authentication token for
     * the Looker API server because the `/login` endpoint is not available via CORS for the Looker API.
     *
     * @param props the properties of the request
     * @returns the same request properties with "authentication" data added
     *
     */
    CorsSession.prototype.authenticate = function (props) {
        return __awaiter(this, void 0, void 0, function () {
            var token;
            var _a;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        if (!!this.isAuthenticated()) return [3 /*break*/, 2];
                        return [4 /*yield*/, this.getToken()];
                    case 1:
                        token = _b.sent();
                        if (token) {
                            /**
                             * Assign the token, which will track its expiration time automatically
                             */
                            this.activeToken.setToken(token);
                        }
                        _b.label = 2;
                    case 2:
                        if (this.isAuthenticated()) {
                            /**
                             * Session is authenticated
                             * set CORS mode
                             */
                            props.mode = 'cors';
                            /**
                             * remove any credentials attribute that may have been set
                             */
                            delete props['credentials'];
                            /**
                             * replace the headers argument with required values
                             * Note: using new Headers() to construct the headers breaks CORS for the Looker API. Don't know why yet
                             */
                            props.headers = (_a = {
                                    /** Provide the authentication information */
                                    'Authorization': "Bearer " + this.activeToken.access_token
                                },
                                /** Identify the SDK */
                                _a[transport_1.LookerAppId] = transport_1.agentPrefix,
                                _a);
                        }
                        return [2 /*return*/, props];
                }
            });
        });
    };
    return CorsSession;
}(authSession_1.AuthSession));
exports.CorsSession = CorsSession;
