"use strict";
/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2019 Looker Data Sciences, Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * @class LookerBrowserSDK
 *
 * Simple factory for the browser version of the Looker SDK. Provides default connectivity for SDK methods
 */
var browserTransport_1 = require("./browserTransport");
var browserSession_1 = require("./browserSession");
var apiSettings_1 = require("./apiSettings");
var methods_1 = require("../sdk/3.1/methods");
var methods_2 = require("../sdk/4.0/methods");
exports.BrowserSettings = function () {
    var settings = apiSettings_1.DefaultSettings();
    settings.base_url = document.location.hostname + ":19999";
    return settings;
};
var LookerBrowserSDK = /** @class */ (function () {
    function LookerBrowserSDK() {
    }
    /**
     * Creates a [[Looker31SDK]] object.
     *
     * @param settings Defaults to the settings for the Browser
     *
     * @param transport Defaults to a `BrowserTransport` object
     *
     * @param session Defaults to `BrowserSession` which defers user authentication
     */
    LookerBrowserSDK.init31 = function (settings, transport, session) {
        settings = settings || exports.BrowserSettings();
        transport = transport || new browserTransport_1.BrowserTransport(settings);
        session = session || new browserSession_1.BrowserSession(settings, transport);
        return new methods_1.Looker31SDK(session);
    };
    /**
     * Creates a [[Looker40SDK]] object.
     *
     * @param settings Defaults to the settings for the Browser
     *
     * @param transport Defaults to a `BrowserTransport` object
     *
     * @param session Defaults to `BrowserSession` which defers user authentication
     */
    LookerBrowserSDK.init40 = function (settings, transport, session) {
        settings = settings || exports.BrowserSettings();
        transport = transport || new browserTransport_1.BrowserTransport(settings);
        session = session || new browserSession_1.BrowserSession(settings, transport);
        return new methods_2.Looker40SDK(session);
    };
    return LookerBrowserSDK;
}());
exports.LookerBrowserSDK = LookerBrowserSDK;
