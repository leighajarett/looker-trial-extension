import { IApiSettings } from './apiSettings';
import { Authenticator, ITransportSettings } from './transport';
import { APIMethods } from "./apiMethods";
import { IAuthSession } from "./authSession";
export interface IHostConnection {
    request(httpMethod: string, path: string, body?: any, params?: any, authenticator?: Authenticator, options?: Partial<ITransportSettings>): Promise<any>;
}
export declare class LookerExtensionSDK {
    /**
     * Creates a [[LookerSDK]] object.
     *
     * Examples:
     * LookerExtensionSDK.createClient(host) => constructs a Looker31SDK
     *
     * LookerExtensionSDK.createClient(host, Looker40SDK) => constructs a Looker40SDK
     */
    static createClient<T extends APIMethods>(hostConnection: IHostConnection, type?: new (authSession: IAuthSession) => T, settings?: IApiSettings): T;
}
