/// <reference types="react" />
import { ResponsiveValue } from 'styled-system';
import { CompatibleHTMLProps, FontSizes, TextTransformProps } from '@looker/design-tokens';
import { TextBaseProps } from './TextBase';
import { TextVariantProps } from './text_variant';
import { TruncateProps } from './truncate';
declare type HeadingLevels = 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';
export interface HeadingProps extends TextBaseProps, TextTransformProps, TextVariantProps, TruncateProps, Omit<CompatibleHTMLProps<HTMLHeadingElement>, 'wrap'> {
    as?: HeadingLevels;
}
export declare const Heading: import("styled-components").StyledComponent<"span", any, {
    lineHeight: "small" | "medium" | "large" | "xxsmall" | "xsmall" | "xlarge" | "xxlarge" | "xxxlarge" | "xxxxlarge" | ("small" | "medium" | "large" | "xxsmall" | "xsmall" | "xlarge" | "xxlarge" | "xxxlarge" | "xxxxlarge" | null)[] | {
        [x: string]: "small" | "medium" | "large" | "xxsmall" | "xsmall" | "xlarge" | "xxlarge" | "xxxlarge" | "xxxxlarge" | undefined;
        [x: number]: "small" | "medium" | "large" | "xxsmall" | "xsmall" | "xlarge" | "xxlarge" | "xxxlarge" | "xxxxlarge" | undefined;
    } | null | undefined;
} & TextBaseProps & {
    fontSize: "small" | "medium" | "large" | "xxsmall" | "xsmall" | "xlarge" | "xxlarge" | "xxxlarge" | "xxxxlarge" | ("small" | "medium" | "large" | "xxsmall" | "xsmall" | "xlarge" | "xxlarge" | "xxxlarge" | "xxxxlarge" | null)[] | {
        [x: string]: "small" | "medium" | "large" | "xxsmall" | "xsmall" | "xlarge" | "xxlarge" | "xxxlarge" | "xxxxlarge" | undefined;
        [x: number]: "small" | "medium" | "large" | "xxsmall" | "xsmall" | "xlarge" | "xxlarge" | "xxxlarge" | "xxxxlarge" | undefined;
    };
    lineHeight: ResponsiveValue<FontSizes, Required<import("styled-system").Theme<import("react").ReactText>>>;
} & HeadingProps, "fontSize" | "lineHeight">;
export {};
