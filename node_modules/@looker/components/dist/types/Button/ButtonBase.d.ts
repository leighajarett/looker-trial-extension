import { CompatibleHTMLProps, SemanticColors, SpaceProps } from '@looker/design-tokens';
import React from 'react';
import { MinWidthProps, MaxWidthProps, WidthProps } from 'styled-system';
import { ButtonSizes, ButtonSizeProps } from './size';
import { ButtonIconProps } from './icon';
declare type ButtonColors = keyof SemanticColors;
export interface ButtonBaseProps extends Omit<CompatibleHTMLProps<HTMLButtonElement>, 'type'>, ButtonSizeProps, MaxWidthProps, MinWidthProps, WidthProps, SpaceProps {
    type?: 'button' | 'submit' | 'reset';
    forwardedAs?: 'a';
    color?: ButtonColors;
    focusVisible?: boolean;
}
export interface ButtonProps extends ButtonBaseProps, ButtonIconProps {
    size?: ButtonSizes;
    fullWidth?: boolean;
}
export declare const buttonCSS: import("styled-components").FlattenInterpolation<import("styled-components").ThemedStyledProps<ButtonBaseProps, any>>;
export declare const ButtonBase: import("styled-components").StyledComponent<React.ForwardRefExoticComponent<ButtonProps & React.RefAttributes<HTMLButtonElement>>, any, ButtonProps, never>;
export {};
