import React, { ReactNode } from 'react';
import { ResponsiveValue, TLengthStyledSystem } from 'styled-system';
import { FieldBaseProps } from './FieldBase';
declare type ResponsiveSpaceValue = ResponsiveValue<TLengthStyledSystem>;
export interface FieldProps extends FieldBaseProps {
    description?: ReactNode;
    detail?: ReactNode;
    id?: string;
    inline?: boolean;
    labelWidth?: ResponsiveSpaceValue;
    width?: ResponsiveSpaceValue;
}
export declare const fieldPropKeys: string[];
export declare const pickFieldProps: (props: FieldProps) => Partial<FieldProps>;
export declare const omitFieldProps: (props: FieldProps) => Partial<FieldProps>;
interface FieldPropsInternal extends FieldProps {
    id: string;
}
export declare const Field: import("styled-components").StyledComponent<React.FunctionComponent<FieldPropsInternal>, any, FieldPropsInternal, never>;
export {};
