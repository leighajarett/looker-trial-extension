import React, { MouseEvent } from 'react';
import { InputTextProps } from '../InputText';
export interface InputSearchProps extends InputTextProps {
    hideControls?: boolean;
    hideSearchIcon?: boolean;
    showClear?: boolean;
    summary?: string;
    onClear?: (e: MouseEvent<HTMLButtonElement>) => void;
    defaultValue?: string;
    value?: string;
    onClick?: (e: MouseEvent<HTMLDivElement>) => void;
    onMouseDown?: (e: MouseEvent<HTMLDivElement>) => void;
    onMouseEnter?: (e: MouseEvent<HTMLDivElement>) => void;
    onMouseLeave?: (e: MouseEvent<HTMLDivElement>) => void;
    onMouseOver?: (e: MouseEvent<HTMLDivElement>) => void;
    onMouseOut?: (e: MouseEvent<HTMLDivElement>) => void;
    onMouseUp?: (e: MouseEvent<HTMLDivElement>) => void;
}
export declare const SearchIcon: import("styled-components").StyledComponent<React.ForwardRefExoticComponent<import("../../../Icon").IconProps & React.RefAttributes<HTMLDivElement>>, any, {}, never>;
export declare const InputSearch: import("styled-components").StyledComponent<React.ForwardRefExoticComponent<InputSearchProps & React.RefAttributes<HTMLInputElement>>, any, {}, never>;
