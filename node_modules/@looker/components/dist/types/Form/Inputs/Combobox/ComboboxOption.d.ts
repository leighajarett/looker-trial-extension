import { CompatibleHTMLProps, ColorProps, FlexboxProps, LayoutProps, SpaceProps, TypographyProps } from '@looker/design-tokens';
import React from 'react';
export interface ComboboxOptionObject {
    label?: string;
    value: string;
    scrollIntoView?: boolean;
}
export interface HighlightTextProps {
    highlightText?: boolean;
}
export interface ComboboxOptionProps extends ComboboxOptionObject, HighlightTextProps, ColorProps, FlexboxProps, LayoutProps, SpaceProps, TypographyProps, Omit<CompatibleHTMLProps<HTMLLIElement>, 'data' | 'value'> {
    children?: React.ReactNode;
}
export declare const ComboboxOptionWrapper: React.ForwardRefExoticComponent<ComboboxOptionProps & React.RefAttributes<HTMLLIElement>>;
export declare const ComboboxOptionDetail: import("styled-components").StyledComponent<"div", any, {}, never>;
export declare const comboboxOptionGrid: import("styled-components").FlattenInterpolation<import("styled-components").ThemeProps<any>>;
export declare const comboboxOptionStyle: import("styled-components").FlattenInterpolation<import("styled-components").ThemeProps<any>>;
export declare const ComboboxOption: import("styled-components").StyledComponent<React.ForwardRefExoticComponent<ComboboxOptionProps & React.RefAttributes<HTMLLIElement>>, any, {}, never>;
export declare const comboboxOptionDefaultProps: Partial<ComboboxOptionProps>;
export declare function ComboboxOptionTextInternal({ highlightText, ...props }: CompatibleHTMLProps<HTMLSpanElement> & HighlightTextProps): JSX.Element;
export declare const ComboboxOptionText: import("styled-components").StyledComponent<typeof ComboboxOptionTextInternal, any, {}, never>;
