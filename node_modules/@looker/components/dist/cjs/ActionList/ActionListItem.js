"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const styled_components_1 = __importDefault(require("styled-components"));
const react_1 = __importStar(require("react"));
const Button_1 = require("../Button");
const Menu_1 = require("../Menu");
const ActionListRow_1 = require("./ActionListRow");
const ActionListContext_1 = require("./ActionListContext");
const ActionListItemInternal = ({ actions, children, className, disabled, id, onClick, }) => {
    const actionListItemRef = react_1.useRef(null);
    const { addItemToAllItems, canSelect, itemsSelected, onSelect, onClickRowSelect, } = react_1.useContext(ActionListContext_1.ActionListContext);
    react_1.useEffect(() => {
        addItemToAllItems(id);
    }, [addItemToAllItems, id]);
    const handleOnSelect = () => onClickRowSelect && onSelect && onSelect(id);
    const handleClick = disabled
        ? undefined
        : onClickRowSelect
            ? handleOnSelect
            : onClick || undefined;
    const handleMenuClick = (event) => {
        event.stopPropagation();
    };
    const handleKeyDown = (event) => {
        const isEventFromChild = event.currentTarget !== event.target;
        if (event.keyCode === 13 && !isEventFromChild) {
            event.currentTarget.click();
        }
    };
    const itemActions = actions && (react_1.default.createElement("div", { onClick: handleMenuClick },
        react_1.default.createElement(Menu_1.Menu, { hoverDisclosureRef: actionListItemRef },
            react_1.default.createElement(Menu_1.MenuDisclosure, null,
                react_1.default.createElement(Button_1.IconButton, { icon: "DotsVert", label: "Actions", size: "medium" })),
            react_1.default.createElement(Menu_1.MenuList, null, actions))));
    const onChange = onSelect ? () => onSelect(id) : undefined;
    return (react_1.default.createElement(ActionListRow_1.ActionListRow, { className: className, secondary: itemActions, ref: actionListItemRef, onClick: handleClick, onKeyDown: handleKeyDown, tabIndex: 0, hasCheckbox: !!canSelect, onChange: onChange, checked: itemsSelected.includes(id), disabled: disabled, supportsRaised: !onClickRowSelect }, children));
};
exports.ActionListItem = styled_components_1.default(ActionListItemInternal).withConfig({ displayName: "ActionListItem", componentId: "sc-z9mpwi" }) `
  border-bottom: solid 1px ${(props) => props.theme.colors.palette.charcoal200};
  display: flex;
`;
//# sourceMappingURL=ActionListItem.js.map