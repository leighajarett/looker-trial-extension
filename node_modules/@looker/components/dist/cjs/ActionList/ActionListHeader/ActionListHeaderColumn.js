"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importStar(require("react"));
const styled_components_1 = __importDefault(require("styled-components"));
const ActionListContext_1 = require("../ActionListContext");
const Icon_1 = require("../../Icon");
const ActionListHeaderColumnLayout = react_1.forwardRef(({ className, children, id }, ref) => {
    const { columns, onSort } = react_1.useContext(ActionListContext_1.ActionListContext);
    const columnInfo = columns && columns.find((column) => column.id === id);
    const canSort = columnInfo && columnInfo.canSort;
    const handleClick = () => {
        if (onSort && columnInfo && columnInfo.canSort) {
            onSort(id, columnInfo.sortDirection === 'asc' ? 'desc' : 'asc');
        }
    };
    return (react_1.default.createElement("div", { className: className, onClick: handleClick, ref: ref, style: { cursor: canSort ? 'pointer' : undefined } },
        children,
        columnInfo && columnInfo.sortDirection ? (react_1.default.createElement(Icon_1.Icon, { ml: columnInfo.type === 'string' ? 'xxsmall' : undefined, mr: columnInfo.type === 'number' ? 'xxsmall' : undefined, name: columnInfo.sortDirection === 'asc' ? 'CaretUp' : 'CaretDown' })) : null));
});
ActionListHeaderColumnLayout.displayName = 'ActionListHeaderColumnLayout';
exports.ActionListHeaderColumn = styled_components_1.default(ActionListHeaderColumnLayout).withConfig({ displayName: "ActionListHeaderColumn", componentId: "sc-1kw5jif" }) `
  display: flex;
  align-items: center;
  word-break: break-all;
`;
//# sourceMappingURL=ActionListHeaderColumn.js.map