"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importStar(require("react"));
const styled_components_1 = __importDefault(require("styled-components"));
const styled_system_1 = require("styled-system");
const Heading_1 = require("../Text/Heading");
const MenuGroup_hooks_1 = require("./MenuGroup.hooks");
exports.MenuGroupLabel = (_a) => {
    var { labelContent, labelStyles, fontSize } = _a, props = __rest(_a, ["labelContent", "labelStyles", "fontSize"]);
    const labelShimRef = react_1.useRef();
    const isLabelShimVisible = MenuGroup_hooks_1.useElementVisibility(labelShimRef);
    return (react_1.default.createElement(MenuGroupLabelWrapper, { renderBoxShadow: !isLabelShimVisible },
        react_1.default.createElement("div", { ref: labelShimRef, style: { height: '0' } }),
        react_1.default.createElement(Heading_1.Heading, Object.assign({ fontSize: fontSize || 'small', as: "h2", px: "medium", py: "xsmall", fontWeight: "semiBold", style: labelStyles }, props), labelContent)));
};
const MenuGroupLabelWrapper = styled_components_1.default.div.withConfig({ displayName: "MenuGroupLabelWrapper", componentId: "sc-uh69j4" }) `
  ${styled_system_1.color}
  box-shadow: ${({ renderBoxShadow, theme }) => renderBoxShadow
    ? `0 4px 8px -2px ${theme.colors.palette.charcoal200}`
    : 'none'};
  position: sticky;
  top: -1px;
  margin-bottom: ${({ theme }) => theme.space.xxsmall};
`;
exports.MenuGroupLabel.defaultProps = {
    backgroundColor: 'palette.white',
};
//# sourceMappingURL=MenuGroupLabel.js.map