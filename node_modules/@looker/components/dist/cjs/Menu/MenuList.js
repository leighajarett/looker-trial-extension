"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importStar(require("react"));
const react_hotkeys_1 = require("react-hotkeys");
const styled_components_1 = __importStar(require("styled-components"));
const styled_system_1 = require("styled-system");
const design_tokens_1 = require("@looker/design-tokens");
const Popover_1 = require("../Popover");
const MenuContext_1 = require("./MenuContext");
const MenuGroup_1 = require("./MenuGroup");
const moveFocus_1 = require("./moveFocus");
exports.MenuListInternal = react_1.forwardRef((_a, ref) => {
    var { children, compact, customizationProps, disabled, pin, placement } = _a, props = __rest(_a, ["children", "compact", "customizationProps", "disabled", "pin", "placement"]);
    const { id, isOpen, setOpen, triggerElement } = react_1.useContext(MenuContext_1.MenuContext);
    const [renderIconPlaceholder, setRenderIconPlaceholder] = react_1.useState(false);
    const innerRef = react_1.useRef(null);
    const context = {
        compact,
        customizationProps,
        renderIconPlaceholder,
        setRenderIconPlaceholder,
    };
    const menuList = (react_1.default.createElement(MenuContext_1.MenuItemStyleContext.Provider, { value: context },
        react_1.default.createElement(react_hotkeys_1.HotKeys, { innerRef: innerRef, keyMap: { MOVE_DOWN: 'down', MOVE_UP: 'up' }, handlers: {
                MOVE_DOWN: () => moveFocus_1.moveFocus(1, 0, innerRef),
                MOVE_UP: () => moveFocus_1.moveFocus(-1, -1, innerRef),
            }, style: { borderRadius: 'inherit' } },
            react_1.default.createElement("ul", Object.assign({ ref: ref, tabIndex: -1, role: "menu", id: id, "aria-labelledby": id && `button-${id}` }, props), children))));
    const isMenu = isOpen !== undefined;
    const { popover } = Popover_1.usePopover({
        content: menuList,
        isOpen,
        pin,
        placement,
        setOpen,
        triggerElement,
    });
    if (disabled)
        return null;
    if (isMenu)
        return popover || null;
    return menuList;
});
const dividersStyle = styled_components_1.css `
  ${MenuGroup_1.MenuGroup} ~ ${MenuGroup_1.MenuGroup} { /* stylelint-disable-line */
    border-top: 1px solid ${(props) => props.theme.colors.palette.charcoal200};
  }
`;
exports.MenuList = styled_components_1.default(exports.MenuListInternal).withConfig({ displayName: "MenuList", componentId: "sc-1d0p517" }) `
  ${design_tokens_1.reset}

  ${styled_system_1.minHeight}
  ${styled_system_1.maxHeight}
  ${styled_system_1.height}

  min-width: 12rem;
  ${styled_system_1.minWidth}
  ${styled_system_1.maxWidth}
  ${styled_system_1.width}

  overflow: auto;
  border-radius: inherit;

  list-style: none;
  outline: none;
  user-select: none;
  ${(props) => props.groupDividers !== false && dividersStyle};
`;
//# sourceMappingURL=MenuList.js.map