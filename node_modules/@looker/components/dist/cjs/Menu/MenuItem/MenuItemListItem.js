"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const omit_1 = __importDefault(require("lodash/omit"));
const design_tokens_1 = require("@looker/design-tokens");
const react_1 = __importStar(require("react"));
const styled_components_1 = __importStar(require("styled-components"));
const Icon_1 = require("../../Icon");
const hoverStyles = (props) => {
    if (props.current)
        return false;
    return styled_components_1.css `
    &:hover {
      background: ${props.itemStyle.hover.bg};
      color: ${props.itemStyle.hover.color};
      font-size: ${props.itemStyle.hover.color};
      font-weight: ${props.itemStyle.hover.color};

      ${Icon_1.Icon} {
        color: ${props.itemStyle.hover.iconColor};
      }
    }
  `;
};
const iconColor = (props) => props.current
    ? props.itemStyle.current.iconColor
    : props.itemStyle.initial.iconColor;
const Li = react_1.forwardRef((props, ref) => {
    const domProps = omit_1.default(props, 'current', 'focusVisible', 'itemStyle');
    return react_1.default.createElement("li", Object.assign({}, domProps, { ref: ref }));
});
Li.displayName = 'Li';
exports.MenuItemListItem = styled_components_1.default(Li).withConfig({ displayName: "MenuItemListItem", componentId: "sc-1lnfd3r" }) `
  ${design_tokens_1.color}
  ${design_tokens_1.space}
  ${design_tokens_1.typography}

  align-items: center;
  display: flex;
  flex-wrap: wrap;
  outline: none;
  text-decoration: none;
  transition: ${(props) => `background ${props.theme.transitions.durationQuick} ${props.theme.easings.ease},
    color ${props.theme.transitions.durationQuick} ${props.theme.easings.ease}`};

  button,
  a {
    border-left-width: ${({ itemStyle }) => itemStyle.marker.size}px;
    border-left-style: solid;
    border-left-color: ${({ itemStyle, current }) => current ? itemStyle.marker.color : 'transparent'};
    outline: none;
    padding-left: calc(${({ theme, itemStyle }) => `${theme.space.medium} - ${itemStyle.marker.size}px`});
  }

  ${(props) => props.focusVisible &&
    `&:focus-within button,
    &:focus-within a {
      box-shadow: 0 0 3px 1px ${props.theme.colors.palette.blue400};
    }
`}

  ${hoverStyles};

  ${Icon_1.Icon} {
    color: ${iconColor};
    transition: color
      ${(props) => `${props.theme.transitions.durationQuick} ${props.theme.easings.ease}`};
  }
`;
//# sourceMappingURL=MenuItemListItem.js.map