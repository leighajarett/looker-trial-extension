"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importStar(require("react"));
const Button_1 = require("../../Button");
const Form_1 = require("../../Form");
const VisuallyHidden_1 = require("../../VisuallyHidden");
const __1 = require("..");
exports.PromptDialog = ({ saveLabel = 'Save', cancelColor = 'neutral', cancelLabel = 'Cancel', onSave, onCancel, inputLabel, title, secondary, defaultValue = '', close, isOpen, }) => {
    const [value, setValue] = react_1.useState(defaultValue);
    const hasValue = !!value.trim();
    react_1.useEffect(() => {
        setValue(defaultValue);
    }, [defaultValue]);
    const onChange = (event) => {
        setValue(event.currentTarget.value);
    };
    const onSubmit = () => {
        onSave(value);
        close();
        setValue('');
    };
    const cancel = react_1.useCallback(() => {
        close();
        setValue('');
        onCancel && onCancel();
    }, [close, onCancel]);
    const onKeyDown = (event) => {
        if (event.key === 'Enter' && hasValue) {
            onSubmit();
        }
        else if (event.key === 'Escape') {
            cancel();
        }
    };
    return (react_1.default.createElement(__1.Dialog, { width: "30rem", isOpen: isOpen, onClose: cancel },
        react_1.default.createElement(__1.ModalHeader, { hideClose: true }, title),
        react_1.default.createElement(__1.ModalContent, null,
            react_1.default.createElement(VisuallyHidden_1.VisuallyHidden, null,
                react_1.default.createElement(Form_1.Label, { htmlFor: "promptInput" }, inputLabel)),
            react_1.default.createElement(Form_1.InputText, { onKeyDown: onKeyDown, id: "promptInput", placeholder: inputLabel, onChange: onChange, width: "100%", value: value })),
        react_1.default.createElement(__1.ModalFooter, { secondary: secondary },
            react_1.default.createElement(Button_1.Button, { disabled: !hasValue, type: "submit", onClick: onSubmit, color: "primary" }, saveLabel),
            react_1.default.createElement(Button_1.ButtonTransparent, { type: "reset", color: cancelColor, onClick: cancel }, cancelLabel))));
};
//# sourceMappingURL=PromptDialog.js.map