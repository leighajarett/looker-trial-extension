"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importDefault(require("react"));
const react_transition_group_1 = require("react-transition-group");
const utils_1 = require("../utils");
const ModalBackdrop_1 = require("./ModalBackdrop");
const ModalPortal_1 = require("./ModalPortal");
const ModalContext_1 = require("./ModalContext");
function Modal({ backdrop, isOpen, onClose, render, }) {
    const { callbackRef: focusRef, disable: disableFocusTrap, enable: enableFocusTrap, isEnabled: focusTrapEnabled, trapRef: focusTrapRef, } = utils_1.useFocusTrap(isOpen);
    const { callbackRef: scrollRef, disable: disableScrollLock, enable: enableScrollLock, isEnabled: scrollLockEnabled, } = utils_1.useScrollLock(isOpen, false);
    return (react_1.default.createElement(ModalContext_1.ModalContext.Provider, { value: {
            closeModal: onClose,
            disableFocusTrap,
            disableScrollLock,
            enableFocusTrap,
            enableScrollLock,
            focusTrapEnabled,
            focusTrapRef,
            scrollLockEnabled,
        } },
        react_1.default.createElement(react_transition_group_1.CSSTransition, { classNames: "modal", mountOnEnter: true, unmountOnExit: true, in: isOpen, timeout: { enter: 0, exit: 250 } }, (state) => (react_1.default.createElement(ModalPortal_1.ModalPortal, { ref: (node) => {
                focusRef(node);
                scrollRef(node);
            } },
            react_1.default.createElement(ModalBackdrop_1.ModalBackdrop, { className: state, onClick: onClose, visible: backdrop === undefined ? true : !!backdrop, style: !!backdrop && backdrop !== true
                    ? backdrop
                    : undefined }),
            render(state))))));
}
exports.Modal = Modal;
//# sourceMappingURL=Modal.js.map