"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importStar(require("react"));
class ModalManager extends react_1.Component {
    constructor(props) {
        super(props);
        this.open = (event) => {
            if (event && this.props.stopPropagation) {
                event.stopPropagation();
                const nativeEvent = event.nativeEvent;
                nativeEvent.preventDefault && nativeEvent.preventDefault();
                nativeEvent.stopImmediatePropagation &&
                    nativeEvent.stopImmediatePropagation();
            }
            this.setState({ isOpen: true });
        };
        this.close = () => {
            if (this.props.canClose && !this.props.canClose())
                return;
            this.props.onClose && this.props.onClose();
            this.setState({ isOpen: false });
        };
        this.state = { isOpen: false };
        this.triggerRef = react_1.createRef();
    }
    componentDidMount() {
        if (this.props.isOpen)
            this.open();
    }
    render() {
        const _a = this.props, { content, children } = _a, otherProps = __rest(_a, ["content", "children"]);
        const modalProps = Object.assign({}, otherProps);
        return (react_1.default.createElement(react_1.default.Fragment, null,
            this.renderModal(content, modalProps),
            children && children(this.open, this.triggerRef)));
    }
}
exports.ModalManager = ModalManager;
//# sourceMappingURL=ModalManager.js.map