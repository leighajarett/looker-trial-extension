"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importStar(require("react"));
const Button_1 = require("../../Button");
const Dialog_1 = require("../Dialog");
const ConfirmLayout_1 = require("./ConfirmLayout");
exports.ConfirmationDialog = (_a) => {
    var { cancelLabel = 'Cancel', close, confirmLabel = 'Confirm', buttonColor = 'primary', cancelColor = 'neutral', isOpen = false, message, onCancel, onConfirm, title } = _a, props = __rest(_a, ["cancelLabel", "close", "confirmLabel", "buttonColor", "cancelColor", "isOpen", "message", "onCancel", "onConfirm", "title"]);
    const confirm = react_1.useCallback(() => {
        onConfirm(close);
    }, [close, onConfirm]);
    const cancel = react_1.useCallback(() => {
        if (onCancel) {
            onCancel(close);
        }
        else {
            close();
        }
    }, [close, onCancel]);
    return (react_1.default.createElement(Dialog_1.Dialog, Object.assign({ isOpen: isOpen, onClose: cancel }, props),
        react_1.default.createElement(ConfirmLayout_1.ConfirmLayout, { title: title, message: message, primaryButton: react_1.default.createElement(Button_1.Button, { onClick: confirm, color: buttonColor }, confirmLabel), secondaryButton: react_1.default.createElement(Button_1.ButtonTransparent, { color: cancelColor, onClick: cancel }, cancelLabel) })));
};
//# sourceMappingURL=ConfirmationDialog.js.map