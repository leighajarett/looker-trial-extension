"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importStar(require("react"));
const styled_components_1 = __importDefault(require("styled-components"));
const utils_1 = require("../../../utils");
const Form_1 = require("../../Form");
const ToggleSwitch_1 = require("../../Inputs/ToggleSwitch/ToggleSwitch");
const Field_1 = require("../Field");
const FieldInline_1 = require("../FieldInline");
const FieldToggleSwitchLayout = react_1.forwardRef((props, ref) => {
    const validationMessage = Form_1.useFormContext(props);
    const id = utils_1.useID(props.id);
    return (react_1.default.createElement(FieldInline_1.FieldInline, Object.assign({}, Field_1.pickFieldProps(props), { validationMessage: validationMessage, id: id }),
        react_1.default.createElement(ToggleSwitch_1.ToggleSwitch, Object.assign({}, Field_1.omitFieldProps(props), { "aria-describedby": `${id}-describedby`, id: id, validationType: validationMessage && validationMessage.type, ref: ref }))));
});
FieldToggleSwitchLayout.displayName = 'FieldToggleSwitchLayout';
exports.FieldToggleSwitch = styled_components_1.default(FieldToggleSwitchLayout).withConfig({ displayName: "FieldToggleSwitch", componentId: "sc-11pxqwb" }) ``;
//# sourceMappingURL=FieldToggleSwitch.js.map