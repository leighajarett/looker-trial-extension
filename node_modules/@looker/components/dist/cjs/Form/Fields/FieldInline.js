"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importDefault(require("react"));
const styled_components_1 = __importDefault(require("styled-components"));
const Label_1 = require("../Label/Label");
const ValidationMessage_1 = require("../ValidationMessage/ValidationMessage");
const RequiredStar_1 = require("./RequiredStar");
const FieldInlineLayout = ({ className, children, label, labelFontSize, id, required, validationMessage, }) => {
    return (react_1.default.createElement("label", { className: className, htmlFor: id },
        react_1.default.createElement(Label_1.Label, { as: "span", fontSize: labelFontSize },
            label,
            required && react_1.default.createElement(RequiredStar_1.RequiredStar, null)),
        react_1.default.createElement(InputArea, null, children),
        react_1.default.createElement(MessageArea, { id: `${id}-describedby` }, validationMessage ? (react_1.default.createElement(ValidationMessage_1.ValidationMessage, Object.assign({}, validationMessage))) : null)));
};
const InputArea = styled_components_1.default.div.withConfig({ displayName: "InputArea", componentId: "sc-1i2och3" }) ``;
const MessageArea = styled_components_1.default.div.withConfig({ displayName: "MessageArea", componentId: "sc-14b9q2" }) ``;
exports.FieldInline = styled_components_1.default(FieldInlineLayout).withConfig({ displayName: "FieldInline", componentId: "sc-ry3fzk" }) `
  align-items: center;
  display: grid;
  grid-template-areas: 'input label' '. messages';
  grid-template-columns: repeat(3, max-content);
  line-height: ${({ theme }) => theme.lineHeights.small};

  ${InputArea} {
    grid-area: input;
  }

  ${Label_1.Label} {
    color: ${({ theme, disabled }) => disabled && theme.colors.palette.charcoal500};
    font-size: ${({ theme }) => theme.fontSizes.small};
    font-weight: normal;
    grid-area: label;
    padding-left: ${({ theme }) => theme.space.xsmall};
  }

  ${MessageArea} {
    grid-area: messages;
    padding-left: ${({ theme }) => theme.space.small};
  }
`;
//# sourceMappingURL=FieldInline.js.map