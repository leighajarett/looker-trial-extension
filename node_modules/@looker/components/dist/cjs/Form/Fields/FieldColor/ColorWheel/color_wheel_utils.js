"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const range_1 = __importDefault(require("lodash/range"));
const math_utils_1 = require("./math_utils");
exports.white = () => ({
    brightness: 1,
    coord: { angle: 0, radius: 0 },
});
exports.hsv2polar = (color) => ({
    angle: math_utils_1.deg2rad(color.h),
    radius: color.s,
});
exports.polarbrightness2hsv = (pb) => ({
    h: math_utils_1.rad2deg(pb.coord.angle),
    s: pb.coord.radius,
    v: pb.brightness,
});
exports.scalePBRadius = (by, pb) => (Object.assign(Object.assign({}, pb), { coord: math_utils_1.scaleRadius(by, pb.coord) }));
exports.cartesian2hsv = (brightness, radius, coord) => [coord]
    .map((c) => math_utils_1.translateDiagonal(-radius, c))
    .map(math_utils_1.cartesian2polar)
    .map((c) => (c.radius <= radius ? { brightness, coord: c } : exports.white()))
    .map((pb) => exports.scalePBRadius(1 / radius, pb))
    .map(exports.polarbrightness2hsv)[0];
exports.hsv2cartesian = (radius, color) => [color]
    .map(exports.hsv2polar)
    .map((coord) => math_utils_1.scaleRadius(radius, coord))
    .map(math_utils_1.polar2cartesian)
    .map((coord) => math_utils_1.translateDiagonal(radius, coord))[0];
exports.generateColorWheel = (radius, brightness) => range_1.default(math_utils_1.diameter(radius)).map((_, x) => range_1.default(math_utils_1.diameter(radius)).map((_$, y) => exports.cartesian2hsv(brightness, radius, { x, y })));
//# sourceMappingURL=color_wheel_utils.js.map