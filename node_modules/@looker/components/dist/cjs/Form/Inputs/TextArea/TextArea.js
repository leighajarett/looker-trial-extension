"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const pick_1 = __importDefault(require("lodash/pick"));
const react_1 = __importDefault(require("react"));
const styled_components_1 = __importDefault(require("styled-components"));
const design_tokens_1 = require("@looker/design-tokens");
const InputText_1 = require("../InputText");
const Icon_1 = require("../../../Icon");
const InputProps_1 = require("../InputProps");
const TextAreaLayout = (_a) => {
    var { className, validationType } = _a, props = __rest(_a, ["className", "validationType"]);
    const textareaProps = pick_1.default(props, InputProps_1.inputPropKeys);
    return (react_1.default.createElement("div", { className: className },
        react_1.default.createElement("textarea", Object.assign({ "aria-invalid": validationType === 'error' ? 'true' : undefined }, textareaProps)),
        validationType && react_1.default.createElement(Icon_1.Icon, { name: "Warning", color: "palette.red500" })));
};
const TextAreaResize = (resize) => resize === false ? 'none' : resize === true ? 'vertical' : resize;
exports.TextArea = styled_components_1.default(TextAreaLayout).withConfig({ displayName: "TextArea", componentId: "sc-g658lj" }) `
  height: fit-content;
  position: relative;
  width: 100%;

  ${Icon_1.Icon} {
    position: absolute;
    top: 0.5rem;
    right: 0.5rem;
  }

  textarea {
    ${design_tokens_1.layout}
    ${design_tokens_1.space}
    ${design_tokens_1.typography}

    resize: ${(props) => TextAreaResize(props.resize)};
    border: solid 1px;
    width: 100%;

    border-color: ${(props) => props.theme.colors.palette.charcoal200};
    border-radius: ${(props) => props.theme.radii.medium};
    font-size: ${(props) => props.theme.fontSizes.small};
    min-height: 6.25rem;
    padding: ${({ theme }) => `${theme.space.xsmall} ${theme.space.small}`};
    padding-right: ${(props) => props.theme.space.xlarge};

    &:hover {
      ${InputText_1.inputTextHover}
    }
    &:focus,
    :focus-within {
      ${InputText_1.inputTextFocus}
    }

    ${(props) => (props.disabled ? InputText_1.inputTextDisabled : '')}

    ${InputText_1.inputTextValidation}
  }
`;
exports.TextArea.defaultProps = {
    height: '6.25rem',
    resize: 'vertical',
    width: '100%',
};
exports.TextArea.displayName = 'TextArea';
//# sourceMappingURL=TextArea.js.map