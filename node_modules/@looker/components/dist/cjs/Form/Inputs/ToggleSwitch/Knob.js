"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const polished_1 = require("polished");
const react_1 = __importDefault(require("react"));
const styled_components_1 = __importDefault(require("styled-components"));
const design_tokens_1 = require("@looker/design-tokens");
const Knob = styled_components_1.default(({ className }) => react_1.default.createElement("div", { className: className })).withConfig({ displayName: "Knob", componentId: "sc-1wrew84" }) `
  transform: ${({ on, size }) => (on ? `translateX(${polished_1.rem(size * 0.75)})` : '')};
  transition: ${({ theme }) => theme.transitions.durationModerate};
  position: absolute;
  bottom: ${({ size }) => polished_1.rem(size * 0.1)};
  left: ${({ size }) => polished_1.rem(size * 0.1)};
  width: ${({ size }) => polished_1.rem(size * 0.8)};
  height: ${({ size }) => polished_1.rem(size * 0.8)};
  border-radius: 50%;
  background: ${({ theme }) => theme.colors.palette.white};
`;
const KnobContainerLayout = (_a) => {
    var { className } = _a, props = __rest(_a, ["className"]);
    return (react_1.default.createElement("div", { className: className },
        react_1.default.createElement(Knob, Object.assign({}, props))));
};
exports.KnobContainer = styled_components_1.default(KnobContainerLayout).withConfig({ displayName: "KnobContainer", componentId: "sc-1cq0ej0" }) `
  ${design_tokens_1.reset}

  transition: ${({ theme }) => theme.transitions.durationModerate};
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  border-radius: ${({ size }) => polished_1.rem(size)};
  background: ${({ on, theme }) => on ? theme.colors.palette.purple400 : theme.colors.palette.charcoal300};

  &:hover {
    ${({ disabled, theme }) => disabled &&
    `box-shadow: 0 0 0.01rem 0.01rem ${polished_1.rgba(theme.colors.palette.primary500, 0.5)}`};
  }
`;
//# sourceMappingURL=Knob.js.map