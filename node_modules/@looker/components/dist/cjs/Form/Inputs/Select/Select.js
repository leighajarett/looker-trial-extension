"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importStar(require("react"));
const styled_components_1 = __importDefault(require("styled-components"));
const Combobox_1 = require("../Combobox");
const SelectOptions_1 = require("./SelectOptions");
const options_1 = require("./utils/options");
const useWindowedOptions_1 = require("./utils/useWindowedOptions");
const SelectComponent = react_1.forwardRef((_a, ref) => {
    var { options, disabled, isFilterable, isClearable, placeholder, onFilter, onChange, value, defaultValue, noOptionsLabel, 'aria-describedby': ariaDescribedby, 'aria-label': ariaLabel, 'aria-labelledby': ariaLabelledby, validationType, windowedOptions: windowedOptionsProp } = _a, props = __rest(_a, ["options", "disabled", "isFilterable", "isClearable", "placeholder", "onFilter", "onChange", "value", "defaultValue", "noOptionsLabel", 'aria-describedby', 'aria-label', 'aria-labelledby', "validationType", "windowedOptions"]);
    const optionValue = options_1.getOption(value, options);
    const nullDefault = (isClearable || placeholder) && !defaultValue;
    const defaultOptionValue = nullDefault
        ? undefined
        : options_1.getOption(defaultValue, options) || (options && options_1.getFirstOption(options));
    function handleChange(option) {
        const newValue = option ? option.value : '';
        onChange && onChange(newValue);
        onFilter && onFilter('');
    }
    function handleInputChange(e) {
        onFilter && onFilter(e.currentTarget.value);
    }
    function handleClose() {
        onFilter && onFilter('');
    }
    const ariaProps = {
        'aria-describedby': ariaDescribedby,
        'aria-invalid': validationType === 'error',
        'aria-label': ariaLabel,
        'aria-labelledby': ariaLabelledby,
    };
    const inputProps = {
        disabled,
        placeholder,
        validationType,
    };
    const windowedOptions = useWindowedOptions_1.useShouldWindowOptions(options, windowedOptionsProp);
    return (react_1.default.createElement(Combobox_1.Combobox, Object.assign({}, props, { value: optionValue, defaultValue: defaultOptionValue, onChange: handleChange, onClose: handleClose }),
        react_1.default.createElement(Combobox_1.ComboboxInput, Object.assign({}, inputProps, ariaProps, { autoComplete: false, readOnly: !isFilterable, onChange: handleInputChange, hideControls: !isClearable, selectOnClick: isFilterable, ref: ref })),
        !disabled && (react_1.default.createElement(Combobox_1.ComboboxList, Object.assign({ persistSelection: true, windowedOptions: windowedOptions }, ariaProps),
            react_1.default.createElement(SelectOptions_1.SelectOptions, { options: options, windowedOptions: windowedOptions, noOptionsLabel: noOptionsLabel })))));
});
SelectComponent.displayName = 'SelectComponent';
exports.Select = styled_components_1.default(SelectComponent).withConfig({ displayName: "Select", componentId: "sc-1doyw8e" }) ``;
exports.Select.defaultProps = { width: '100%' };
//# sourceMappingURL=Select.js.map