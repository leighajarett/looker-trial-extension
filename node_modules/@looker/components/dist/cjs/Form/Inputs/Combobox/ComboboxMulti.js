"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const every_1 = __importDefault(require("lodash/every"));
const react_1 = __importStar(require("react"));
const styled_components_1 = __importDefault(require("styled-components"));
const utils_1 = require("../../../utils");
const useFocusManagement_1 = require("./utils/useFocusManagement");
const state_1 = require("./utils/state");
const ComboboxContext_1 = require("./ComboboxContext");
const Combobox_1 = require("./Combobox");
const useComboboxRefs_1 = require("./utils/useComboboxRefs");
const useComboboxToggle_1 = require("./utils/useComboboxToggle");
const useScrollState_1 = require("./utils/useScrollState");
function compareOptions(optionsA, optionsB, compare) {
    return compare(optionsA, (optionA) => optionsB.find((optionB) => optionA.value === optionB.value));
}
exports.ComboboxMultiInternal = react_1.forwardRef((_a, forwardedRef) => {
    var { openOnFocus = false, onChange, values, defaultValues, onClose, onOpen, id: propsID } = _a, rest = __rest(_a, ["openOnFocus", "onChange", "values", "defaultValues", "onClose", "onOpen", "id"]);
    const initialValues = values || defaultValues;
    const initialData = {
        options: initialValues || [],
    };
    const [state, data, transition] = state_1.useReducerMultiMachine(Object.assign(Object.assign({}, ComboboxContext_1.defaultMultiData), initialData));
    const { lastActionType, options } = data;
    if (values !== undefined &&
        (options.length !== values.length ||
            !compareOptions(options, values, every_1.default))) {
        transition &&
            transition(state_1.ComboboxActionType.SELECT_SILENT, {
                options: values,
            });
    }
    const focusManagement = useFocusManagement_1.useFocusManagement(lastActionType);
    const id = utils_1.useID(propsID);
    const isVisible = useComboboxToggle_1.useComboboxToggle(state, options, onOpen, onClose);
    const _b = useComboboxRefs_1.useComboboxRefs(forwardedRef), { ref } = _b, commonRefs = __rest(_b, ["ref"]);
    const scrollState = useScrollState_1.useScrollState();
    const context = Object.assign(Object.assign(Object.assign(Object.assign({}, commonRefs), focusManagement), scrollState), { data,
        id,
        isVisible,
        onChange,
        openOnFocus,
        state,
        transition });
    return (react_1.default.createElement(ComboboxContext_1.ComboboxMultiContext.Provider, { value: context },
        react_1.default.createElement(Combobox_1.ComboboxWrapper, Object.assign({ id: id }, rest, { isVisible: isVisible, ref: ref }))));
});
exports.ComboboxMultiInternal.displayName = 'ComboboxMultiInternal';
exports.ComboboxMulti = styled_components_1.default(exports.ComboboxMultiInternal).withConfig({ displayName: "ComboboxMulti", componentId: "sc-172z9fw" }) ``;
exports.ComboboxMulti.defaultProps = {
    display: 'flex',
};
//# sourceMappingURL=ComboboxMulti.js.map