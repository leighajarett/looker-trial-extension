"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importStar(require("react"));
const styled_components_1 = __importDefault(require("styled-components"));
const utils_1 = require("../../../utils");
const Checkbox_1 = require("../Checkbox");
const ComboboxContext_1 = require("./ComboboxContext");
const ComboboxOption_1 = require("./ComboboxOption");
const useAddOptionToContext_1 = require("./utils/useAddOptionToContext");
const useOptionEvents_1 = require("./utils/useOptionEvents");
const useOptionStatus_1 = require("./utils/useOptionStatus");
const useOptionScroll_1 = require("./utils/useOptionScroll");
const ComboboxMultiOptionInternal = react_1.forwardRef((_a, forwardedRef) => {
    var { children, highlightText = true, scrollIntoView, hideCheckMark } = _a, props = __rest(_a, ["children", "highlightText", "scrollIntoView", "hideCheckMark"]);
    const { label, value } = props;
    useAddOptionToContext_1.useAddOptionToContext(ComboboxContext_1.ComboboxMultiContext, value, label, scrollIntoView);
    const optionEvents = useOptionEvents_1.useOptionEvents(props, ComboboxContext_1.ComboboxMultiContext);
    const { isActive, isSelected } = useOptionStatus_1.useOptionStatus(ComboboxContext_1.ComboboxMultiContext, value);
    const scrollRef = useOptionScroll_1.useOptionScroll(ComboboxContext_1.ComboboxMultiContext, value, label, scrollIntoView, isActive);
    const ref = utils_1.useForkedRef(scrollRef, forwardedRef);
    return (react_1.default.createElement(ComboboxOption_1.ComboboxOptionWrapper, Object.assign({}, props, optionEvents, { ref: ref, "aria-selected": isActive }),
        react_1.default.createElement(ComboboxOption_1.ComboboxOptionDetail, null, !hideCheckMark && react_1.default.createElement(Checkbox_1.Checkbox, { checked: isSelected })),
        children || react_1.default.createElement(ComboboxOption_1.ComboboxOptionText, { highlightText: highlightText })));
});
ComboboxMultiOptionInternal.displayName = 'ComboboxMultiOptionInternal';
exports.ComboboxMultiOption = styled_components_1.default(ComboboxMultiOptionInternal).withConfig({ displayName: "ComboboxMultiOption", componentId: "sc-13i7vbd" }) `
  ${ComboboxOption_1.comboboxOptionStyle}
  grid-template-columns: ${(props) => props.hideCheckMark ? 0 : props.theme.space.xlarge} 1fr;
`;
exports.ComboboxMultiOption.defaultProps = Object.assign({}, ComboboxOption_1.comboboxOptionDefaultProps);
//# sourceMappingURL=ComboboxMultiOption.js.map