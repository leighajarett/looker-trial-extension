"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const design_tokens_1 = require("@looker/design-tokens");
const styled_components_1 = __importStar(require("styled-components"));
const complex_1 = require("../Layout/utils/complex");
const cardTransition = () => styled_components_1.css `
  ${(props) => `${props.theme.transitions.durationQuick} ${props.theme.easings.ease}`}
`;
const raised = (props) => props.raised &&
    styled_components_1.css `
    box-shadow: ${(props) => props.theme.shadows[1]};

    &:hover {
      box-shadow: ${(props) => props.theme.shadows[2]};
    }
  `;
exports.Card = styled_components_1.default.div.withConfig({ displayName: "Card", componentId: "sc-1i23wrg" }) `
  ${complex_1.complexLayoutCSS}
  ${design_tokens_1.flexbox}

  transition: border ${cardTransition}, box-shadow ${cardTransition};

  &:hover {
    border-color: ${(props) => props.theme.colors.palette.charcoal400};
  }

  ${raised}
`;
exports.Card.defaultProps = {
    bg: 'palette.white',
    border: '1px solid',
    borderColor: 'palette.charcoal300',
    borderRadius: 'medium',
    display: 'flex',
    flexDirection: 'column',
    height: '100%',
    minWidth: '200px',
    overflow: 'hidden',
};
//# sourceMappingURL=Card.js.map