"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const design_tokens_1 = require("@looker/design-tokens");
const react_1 = __importDefault(require("react"));
const styled_components_1 = __importDefault(require("styled-components"));
const styled_system_1 = require("styled-system");
const size = styled_system_1.variant({
    prop: 'size',
    variants: {
        small: {
            fontSize: 'xxsmall',
            lineHeight: '16px',
            px: 'xsmall',
        },
        medium: {
            fontSize: 'xsmall',
            lineHeight: '24px',
            px: 'xsmall',
        },
        large: {
            fontSize: 'medium',
            lineHeight: '32px',
            px: 'small',
        },
    },
});
const intent = styled_system_1.variant({
    prop: 'intent',
    variants: {
        critical: { bg: 'palette.red100', color: 'palette.red600' },
        default: { bg: 'palette.purple100', color: 'palette.purple600' },
        info: { bg: 'palette.blue100', color: 'palette.blue600' },
        neutral: { bg: 'palette.charcoal200', color: 'palette.charcoal600' },
        plain: { bg: 'palette.white', color: 'palette.purple500' },
        positive: { bg: 'palette.green100', color: 'palette.green700' },
        warning: { bg: 'palette.yellow100', color: 'palette.yellow900' },
    },
});
const BadgeLayout = (_a) => {
    var { children } = _a, props = __rest(_a, ["children"]);
    return react_1.default.createElement("span", Object.assign({}, props), children);
};
exports.Badge = styled_components_1.default(BadgeLayout).attrs({ fontWeight: 'semiBold' }).withConfig({ displayName: "Badge", componentId: "sc-tyle59" }) `
  ${design_tokens_1.reset}

  ${design_tokens_1.color}
  ${design_tokens_1.space}
  ${design_tokens_1.typography}
  ${size}
  ${intent}

  display: inline-flex;
  border-radius:50px;
`;
exports.Badge.defaultProps = {
    intent: 'default',
    size: 'medium',
};
//# sourceMappingURL=Badge.js.map