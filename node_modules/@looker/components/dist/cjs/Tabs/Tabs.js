"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importStar(require("react"));
function useTabs(props) {
    const defaultIndex = (props && props.defaultIndex) || 0;
    const onChange = props && props.onChange;
    const isControlled = (props && props.isControlled) || false;
    const [selectedIndex, setSelectedIndex] = react_1.useState(defaultIndex);
    return {
        onSelectTab: (index) => {
            onChange && onChange(index);
            if (!isControlled) {
                setSelectedIndex(index);
            }
        },
        selectedIndex,
    };
}
exports.useTabs = useTabs;
exports.Tabs = ({ children, index: controlledIndex, defaultIndex, onChange, }) => {
    const { current: isControlled } = react_1.useRef(controlledIndex !== undefined);
    if (!isControlled && controlledIndex !== undefined) {
        console.warn('Tabs is changing from uncontrolled to controlled. Tabs should not switch from uncontrolled to controlled (or vice versa). Decide between using a controlled or uncontrolled Tabs for the lifetime of the component. Check the `index` prop being passed in.');
    }
    if (isControlled && controlledIndex === undefined) {
        console.warn('Tabs is changing from uncontrolled to controlled. Tabs should not switch from uncontrolled to controlled (or vice versa). Decide between using a controlled or uncontrolled Tabs for the lifetime of the component. Check the `index` prop being passed in.');
    }
    const tabs = useTabs({ defaultIndex, isControlled, onChange });
    const clonedChildren = react_1.Children.map(children, (child) => {
        return react_1.cloneElement(child, tabs);
    });
    return react_1.default.createElement(react_1.default.Fragment, null, clonedChildren);
};
//# sourceMappingURL=Tabs.js.map