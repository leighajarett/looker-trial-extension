"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = require("react");
function useReadOnlyWarn(name, value, onChange) {
    const unintentionalReadOnly = react_1.useRef(false);
    react_1.useEffect(() => {
        if (value && !onChange) {
            console.error(`Warning: Failed prop type: You provided a \`value\` prop to <${name} /> without an \`onChange\` handler. This will render a read-only field. If the field should be mutable use \`defaultValue\` instead. Otherwise, please provide an \`onChange\` callback.`);
            unintentionalReadOnly.current = true;
        }
    }, [value, onChange, name]);
    return unintentionalReadOnly.current;
}
exports.useReadOnlyWarn = useReadOnlyWarn;
//# sourceMappingURL=useReadOnlyWarn.js.map