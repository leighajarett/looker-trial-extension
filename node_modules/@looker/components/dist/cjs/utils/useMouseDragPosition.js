"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = require("react");
const throttle_1 = __importDefault(require("lodash/throttle"));
function useMouseDragPosition(targetRef) {
    const [isMouseDown, setIsMouseDown] = react_1.useState(false);
    const [mousePos, setMousePos] = react_1.useState({ x: 0, y: 0 });
    const handleMouseDown = (e) => {
        setMousePos({ x: e.pageX, y: e.pageY });
        setIsMouseDown(true);
    };
    const handleMouseUp = () => {
        setIsMouseDown(false);
    };
    const handleMouseMove = throttle_1.default((e) => {
        if (isMouseDown) {
            setMousePos({ x: e.pageX || e.clientX, y: e.pageY || e.clientY });
        }
    }, 50);
    const handleMouseLeave = () => {
        setIsMouseDown(false);
    };
    react_1.useEffect(() => {
        targetRef && targetRef.addEventListener('mousedown', handleMouseDown);
        window.addEventListener('mouseup', handleMouseUp);
        window.addEventListener('mousemove', handleMouseMove);
        window.addEventListener('handleMouseLeave', handleMouseLeave);
        return () => {
            targetRef && targetRef.removeEventListener('mousedown', handleMouseDown);
            window.removeEventListener('mouseup', handleMouseUp);
            window.removeEventListener('mousemove', handleMouseMove);
            window.removeEventListener('handleMouseLeave', handleMouseLeave);
        };
    }, [isMouseDown, targetRef]);
    return { isMouseDown, mousePos: mousePos };
}
exports.useMouseDragPosition = useMouseDragPosition;
//# sourceMappingURL=useMouseDragPosition.js.map