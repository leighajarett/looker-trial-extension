"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const design_tokens_1 = require("@looker/design-tokens");
const polished_1 = require("polished");
const react_1 = __importStar(require("react"));
const styled_components_1 = __importStar(require("styled-components"));
const styled_system_1 = require("styled-system");
const size_1 = require("./size");
const icon_1 = require("./icon");
exports.buttonCSS = styled_components_1.css `
  ${design_tokens_1.reset}
  ${styled_system_1.maxWidth}
  ${styled_system_1.minWidth}
  ${styled_system_1.width}

  ${(props) => props.focusVisible &&
    `
    box-shadow: 0 0 0 0.15rem
      ${polished_1.rgba(props.theme.colors.semanticColors[props.color || 'primary'].main, 0.25)};
  `}

  align-items: center;
  border-radius: ${({ theme }) => theme.radii.medium};
  cursor: pointer;
  display: inline-flex;
  font-weight: 600;
  justify-content: center;
  line-height: 1;
  outline: none;
  transition: border 80ms;
  vertical-align: middle;
  white-space: nowrap;

  &[disabled] {
    cursor: default;
    filter: grayscale(0.3);
    opacity: 0.25;
  }

  ${size_1.buttonSize}
  ${design_tokens_1.space}
`;
const ButtonOuter = styled_components_1.default.button.withConfig({ displayName: "ButtonOuter", componentId: "sc-96uw1q" }) `
  ${exports.buttonCSS}
  ${(props) => props.fullWidth && `width: 100%;`}
`;
const ButtonJSX = react_1.forwardRef((props, ref) => {
    const { children, iconBefore, iconAfter, onBlur, onKeyDown } = props, restProps = __rest(props, ["children", "iconBefore", "iconAfter", "onBlur", "onKeyDown"]);
    const [isFocusVisible, setFocusVisible] = react_1.useState(false);
    const handleOnKeyUp = (event) => {
        setFocusVisible(true);
        onKeyDown && onKeyDown(event);
    };
    const handleOnBlur = (event) => {
        setFocusVisible(false);
        onBlur && onBlur(event);
    };
    return (react_1.default.createElement(ButtonOuter, Object.assign({ focusVisible: isFocusVisible, onKeyUp: handleOnKeyUp, onBlur: handleOnBlur }, restProps, { ref: ref }),
        iconBefore && react_1.default.createElement(icon_1.ButtonIcon, { name: iconBefore }),
        children,
        iconAfter && react_1.default.createElement(icon_1.ButtonIcon, { name: iconAfter })));
});
ButtonJSX.displayName = 'ButtonJSX';
exports.ButtonBase = styled_components_1.default(ButtonJSX).withConfig({ displayName: "ButtonBase", componentId: "sc-rxxo6j" }) `
  ${icon_1.buttonIcon}
`;
exports.ButtonBase.defaultProps = { size: 'medium' };
//# sourceMappingURL=ButtonBase.js.map