"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const styled_components_1 = __importDefault(require("styled-components"));
const ButtonBase_1 = require("./ButtonBase");
exports.Button = styled_components_1.default(ButtonBase_1.ButtonBase).withConfig({ displayName: "Button", componentId: "sc-xc9oca" }) `
  background: ${({ theme, color = 'primary' }) => theme.colors.semanticColors[color].main};
  border: 1px solid
    ${({ theme, color = 'primary' }) => theme.colors.semanticColors[color].main};
  color: ${({ theme, color = 'primary' }) => theme.colors.semanticColors[color].text};

  &:active,
  &.active {
    background: ${({ theme, color = 'primary' }) => theme.colors.semanticColors[color].darker};
    border-color: ${({ theme, color = 'primary' }) => theme.colors.semanticColors[color].darker};
  }
  &:hover,
  &:focus,
  &.hover {
    background: ${({ theme, color = 'primary' }) => theme.colors.semanticColors[color].dark};
    border-color: ${({ theme, color = 'primary' }) => theme.colors.semanticColors[color].dark};
  }
  &[disabled] {
    &:hover,
    &:active,
    &:focus {
      background-color: ${({ theme, color = 'primary' }) => theme.colors.semanticColors[color].main};
      border-color: ${({ theme, color = 'primary' }) => theme.colors.semanticColors[color].borderColor};
    }
  }
`;
//# sourceMappingURL=Button.js.map