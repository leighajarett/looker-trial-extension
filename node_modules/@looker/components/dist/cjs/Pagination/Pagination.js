"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importDefault(require("react"));
const styled_components_1 = __importDefault(require("styled-components"));
const Layout_1 = require("../Layout");
const Button_1 = require("../Button");
const Text_1 = require("../Text");
const PaginationButton = (props) => (react_1.default.createElement(Button_1.IconButton, Object.assign({ outline: true, mx: "xxsmall" }, props)));
const PaginationLayout = ({ className, current, pages, onChange, }) => {
    if (pages <= 1)
        return null;
    const first = () => onChange(1);
    const previous = () => onChange(current - 1);
    const next = () => onChange(current + 1);
    const last = () => onChange(pages);
    return (react_1.default.createElement(Layout_1.Flex, { alignItems: "center", className: className },
        react_1.default.createElement(PaginationButton, { label: "First page of results", icon: "DoubleChevronLeft", onClick: first, disabled: current <= 2 }),
        react_1.default.createElement(PaginationButton, { label: "Previous page of results", icon: "CaretLeft", onClick: previous, disabled: current === 1 }),
        react_1.default.createElement(Text_1.Text, { fontSize: "small", mx: "xxsmall" },
            react_1.default.createElement("b", null, current),
            " of ",
            pages),
        react_1.default.createElement(PaginationButton, { label: "Next page of results", icon: "CaretRight", onClick: next, disabled: pages - current === 0 }),
        react_1.default.createElement(PaginationButton, { mr: "none", label: "Last page of results", icon: "DoubleChevronRight", onClick: last, disabled: pages - current <= 1 })));
};
exports.Pagination = styled_components_1.default(PaginationLayout).withConfig({ displayName: "Pagination", componentId: "sc-18mb581" }) ``;
//# sourceMappingURL=Pagination.js.map