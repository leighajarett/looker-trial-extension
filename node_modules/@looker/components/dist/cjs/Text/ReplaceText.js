"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importDefault(require("react"));
const isRegExp_1 = __importDefault(require("lodash/isRegExp"));
const escapeRegExp_1 = __importDefault(require("lodash/escapeRegExp"));
const isString_1 = __importDefault(require("lodash/isString"));
const flatten_1 = __importDefault(require("lodash/flatten"));
function replaceString(str, match, replace) {
    let curCharStart = 0;
    let curCharLen = 0;
    let re = match;
    if (!isRegExp_1.default(re)) {
        re = new RegExp('(' + escapeRegExp_1.default(re) + ')', 'gi');
    }
    const stringArr = str.split(re);
    return stringArr.map((stringItem, i) => {
        if (i % 2 === 1) {
            curCharLen = stringItem.length;
            curCharStart += stringArr[i - 1].length;
            curCharStart += curCharLen;
            return replace(stringItem, i, curCharStart);
        }
        return stringItem;
    });
}
exports.ReplaceText = ({ children, match, replace, }) => {
    return (react_1.default.createElement(react_1.default.Fragment, null, flatten_1.default(react_1.default.Children.map(children, (child) => {
        return isString_1.default(child) ? replaceString(child, match, replace) : child;
    }))));
};
//# sourceMappingURL=ReplaceText.js.map