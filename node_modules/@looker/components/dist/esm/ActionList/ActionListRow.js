import pick from 'lodash/pick';
import React, { forwardRef } from 'react';
import styled from 'styled-components';
import { ActionListCheckbox, checkListProps, } from './ActionListCheckbox';
export const ActionListRowColumns = styled.div.withConfig({ displayName: "ActionListRowColumns", componentId: "sc-n0udtu" }) ``;
const ActionListRowSupplementary = styled.div.withConfig({ displayName: "ActionListRowSupplementary", componentId: "sc-drnxe2" }) ``;
const ActionListRowLayout = forwardRef((props, ref) => {
    const { className, hasCheckbox, children, onClick, onKeyDown, secondary, tabIndex, } = props;
    return (React.createElement("div", { ref: ref, className: className, onKeyDown: onKeyDown, tabIndex: tabIndex },
        hasCheckbox && React.createElement(ActionListCheckbox, Object.assign({}, pick(props, checkListProps))),
        React.createElement(ActionListRowColumns, { onClick: onClick }, children),
        React.createElement(ActionListRowSupplementary, null, secondary)));
});
ActionListRowLayout.displayName = 'ActionListRowLayout';
export const ActionListRow = styled(ActionListRowLayout).withConfig({ displayName: "ActionListRow", componentId: "sc-1bray9l" }) `
  display: flex;

  background: ${({ disabled, theme }) => disabled && theme.colors.palette.charcoal100};

  &:focus,
  &:hover {
    box-shadow: ${({ theme, supportsRaised, onClick }) => supportsRaised && onClick && theme.shadows[2]};
    cursor: ${({ onClick }) => onClick && 'pointer'};
    outline: none;

    /**
      The hovered ActionListItem needs to sit above its siblings (otherwise the bottom box-shadow is covered up).
      Using position relative to paint it above static siblings.
     */
    position: relative;
  }

  ${ActionListRowColumns} {
    flex-grow: 1;
  }

  ${ActionListRowSupplementary} {
    flex-basis: 2.5rem;
    flex-shrink: 0;
    display: flex;
    align-items: center;
  }
`;
ActionListRow.defaultProps = { supportsRaised: true };
//# sourceMappingURL=ActionListRow.js.map