import React, { useState } from 'react';
import { ActionList } from '../ActionList';
import { ActionListItem } from '../ActionListItem';
import { ActionListItemColumn } from '../ActionListItemColumn';
import { doDefaultActionListSort } from '.';
export const useActionListSortManager = (actionListData, actionListColumns, generateActions) => {
    const [data, setData] = useState(actionListData);
    const [columns, setColumns] = useState(actionListColumns);
    const onSort = (id, sortDirection) => {
        const { columns: sortedColumns, data: sortedData, } = doDefaultActionListSort(data, columns, id, sortDirection);
        setData(sortedData);
        setColumns(sortedColumns);
    };
    const items = data.map((dataObj) => {
        const assumedPrimaryKey = columns[0].id;
        const id = dataObj[assumedPrimaryKey];
        return (React.createElement(ActionListItem, { id: id, key: id, onClick: () => alert(`Row clicked`), actions: generateActions(dataObj) }, columns.map((column) => (React.createElement(ActionListItemColumn, { key: column.id }, dataObj[column.id])))));
    });
    return (React.createElement(ActionList, { columns: columns, onSort: onSort }, items));
};
//# sourceMappingURL=useActionListSortManager.js.map