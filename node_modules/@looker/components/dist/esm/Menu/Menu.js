import React, { useRef, useState } from 'react';
import { useCallbackRef, useHovered, useID } from '../utils';
import { MenuContext } from './MenuContext';
export const Menu = ({ children, disabled, hoverDisclosureRef, id: propsID, isOpen: controlledIsOpen = false, setOpen: controlledSetOpen, }) => {
    const isControlled = useRef(controlledSetOpen !== undefined);
    const [isOpen, setOpen] = useState(controlledIsOpen);
    const [triggerElement, triggerCallbackRef] = useCallbackRef();
    const [showDisclosure] = useHovered(hoverDisclosureRef);
    const id = useID(propsID);
    const context = {
        disabled,
        id,
        isOpen: isControlled.current ? controlledIsOpen : isOpen,
        setOpen: isControlled.current ? controlledSetOpen : setOpen,
        showDisclosure,
        triggerCallbackRef,
        triggerElement,
    };
    return React.createElement(MenuContext.Provider, { value: context }, children);
};
//# sourceMappingURL=Menu.js.map