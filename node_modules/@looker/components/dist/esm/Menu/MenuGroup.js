var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React, { useState } from 'react';
import styled from 'styled-components';
import { color, reset, space, } from '@looker/design-tokens';
import { List } from '../List';
import { MenuItemStyleContext } from './MenuContext';
import { MenuGroupLabel } from './MenuGroupLabel';
import { useMenuItemStyleContext } from './MenuItem';
const MenuGroupInternal = (_a) => {
    var { children, compact, label, labelProps, labelStyles, customizationProps } = _a, boxProps = __rest(_a, ["children", "compact", "label", "labelProps", "labelStyles", "customizationProps"]);
    const [renderIconPlaceholder, setRenderIconPlaceholder] = useState(false);
    const mergedContextValue = useMenuItemStyleContext({
        compact,
        customizationProps,
    });
    const context = Object.assign(Object.assign({}, mergedContextValue), { renderIconPlaceholder,
        setRenderIconPlaceholder });
    return (React.createElement(MenuItemStyleContext.Provider, { value: context },
        React.createElement(MenuGroupWrapper, Object.assign({}, boxProps, { backgroundColor: customizationProps && customizationProps.bg, py: "small" }),
            label && (React.createElement(MenuGroupLabel, Object.assign({ backgroundColor: customizationProps && customizationProps.bg, labelStyles: labelStyles, labelContent: label }, labelProps))),
            React.createElement(List, { nomarker: true }, children))));
};
const MenuGroupWrapper = styled.li.withConfig({ displayName: "MenuGroupWrapper", componentId: "sc-2wowxe" }) `
  ${reset}
  ${space}
  ${color}
`;
export const MenuGroup = styled(MenuGroupInternal).withConfig({ displayName: "MenuGroup", componentId: "sc-3uw0h8" }) ``;
//# sourceMappingURL=MenuGroup.js.map