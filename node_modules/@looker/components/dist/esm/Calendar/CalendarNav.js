import React, { useContext } from 'react';
import styled from 'styled-components';
import noop from 'lodash/noop';
import { Tooltip } from '../Tooltip';
import { IconButton, ButtonTransparent } from '../Button';
import { Heading } from '../Text';
import { CalendarContext } from './CalendarContext';
const headingSizeMap = (size) => {
    switch (size) {
        case 'small':
            return 'h6';
        case 'medium':
            return 'h5';
        case 'large':
            return 'h4';
        default:
            return 'h5';
    }
};
export const CalendarNav = ({ month, labels, localeUtils, locale, nextMonth, previousMonth, }) => {
    const { size, onNowClick = noop, onNextClick = noop, onPrevClick = noop, showPreviousButton, showNextButton, } = useContext(CalendarContext);
    const handleNextClick = (e) => {
        e.preventDefault();
        onNextClick(nextMonth);
    };
    const handlePreviousClick = (e) => {
        e.preventDefault();
        onPrevClick(previousMonth);
    };
    const handleLabelClick = () => {
        onNowClick(new Date(Date.now()));
    };
    return (React.createElement(NavGrid, null,
        React.createElement(NextButtonWrapper, null, showPreviousButton && (React.createElement(IconButton, { icon: "CaretLeft", label: labels.previousMonth, color: "neutral", size: size, onClick: handlePreviousClick }))),
        React.createElement(Tooltip, { content: "View Current Month" }, (eventHandlers, ref) => (React.createElement(ButtonTransparent, Object.assign({ ref: ref }, eventHandlers, { onClick: handleLabelClick, color: "neutral" }),
            React.createElement(Heading, { as: headingSizeMap(size), fontWeight: "semiBold" }, localeUtils.formatMonthTitle(month, locale))))),
        React.createElement(PrevButtonWrapper, null, showNextButton && (React.createElement(IconButton, { icon: "CaretRight", label: labels.nextMonth, color: "neutral", size: size, onClick: handleNextClick, style: { justifySelf: 'right' } })))));
};
const NavGrid = styled.div.withConfig({ displayName: "NavGrid", componentId: "sc-8expsc" }) `
  display: grid;
  grid-template-columns: 40px 1fr 40px;
  align-items: center;
  justify-items: center;
`;
const NextButtonWrapper = styled.div.withConfig({ displayName: "NextButtonWrapper", componentId: "sc-8hlw86" }) `
  justify-self: left;
`;
const PrevButtonWrapper = styled.div.withConfig({ displayName: "PrevButtonWrapper", componentId: "sc-t930yk" }) `
  justify-self: right;
`;
//# sourceMappingURL=CalendarNav.js.map