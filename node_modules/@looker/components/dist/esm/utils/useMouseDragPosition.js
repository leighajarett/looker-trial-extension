import { useState, useEffect } from 'react';
import throttle from 'lodash/throttle';
export function useMouseDragPosition(targetRef) {
    const [isMouseDown, setIsMouseDown] = useState(false);
    const [mousePos, setMousePos] = useState({ x: 0, y: 0 });
    const handleMouseDown = (e) => {
        setMousePos({ x: e.pageX, y: e.pageY });
        setIsMouseDown(true);
    };
    const handleMouseUp = () => {
        setIsMouseDown(false);
    };
    const handleMouseMove = throttle((e) => {
        if (isMouseDown) {
            setMousePos({ x: e.pageX || e.clientX, y: e.pageY || e.clientY });
        }
    }, 50);
    const handleMouseLeave = () => {
        setIsMouseDown(false);
    };
    useEffect(() => {
        targetRef && targetRef.addEventListener('mousedown', handleMouseDown);
        window.addEventListener('mouseup', handleMouseUp);
        window.addEventListener('mousemove', handleMouseMove);
        window.addEventListener('handleMouseLeave', handleMouseLeave);
        return () => {
            targetRef && targetRef.removeEventListener('mousedown', handleMouseDown);
            window.removeEventListener('mouseup', handleMouseUp);
            window.removeEventListener('mousemove', handleMouseMove);
            window.removeEventListener('handleMouseLeave', handleMouseLeave);
        };
    }, [isMouseDown, targetRef]);
    return { isMouseDown, mousePos: mousePos };
}
//# sourceMappingURL=useMouseDragPosition.js.map