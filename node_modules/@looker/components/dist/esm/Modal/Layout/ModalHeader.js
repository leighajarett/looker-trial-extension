var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React, { useContext } from 'react';
import styled from 'styled-components';
import { space, reset, } from '@looker/design-tokens';
import { Icon } from '../../Icon';
import { IconButton } from '../../Button';
import { Heading } from '../../Text';
import { ModalContext } from '../ModalContext';
export const ModalHeader = (_a) => {
    var { children, closeIcon = 'Close', hideClose, headerIcon } = _a, props = __rest(_a, ["children", "closeIcon", "hideClose", "headerIcon"]);
    const { closeModal } = useContext(ModalContext);
    return (React.createElement(Header, Object.assign({}, props),
        headerIcon && React.createElement(HeaderIconWrapper, null, headerIcon),
        React.createElement(Heading, { as: "h3", mr: "xlarge", fontWeight: "semiBold", style: { gridArea: 'text' } }, children),
        !hideClose && (React.createElement(IconButton, { tabIndex: -1, color: "neutral", size: "small", onClick: closeModal, label: "Close", icon: closeIcon, style: { gridArea: 'close' } }))));
};
const Header = styled.header.withConfig({ displayName: "Header", componentId: "sc-1o49vei" }) `
  ${reset}
  ${space}
  display: grid;
  grid-template-columns: [icon] auto [text] 1fr [close] auto;
  align-items: center;
`;
Header.defaultProps = {
    p: 'large',
    pr: 'medium',
    px: 'xlarge',
};
const HeaderIconWrapper = styled.div.withConfig({ displayName: "HeaderIconWrapper", componentId: "sc-1tjpexs" }) `
  grid-area: icon;
  padding-right: 0.5rem;
  ${Icon} {
    display: block;
  }
`;
//# sourceMappingURL=ModalHeader.js.map