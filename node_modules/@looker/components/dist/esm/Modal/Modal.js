import React from 'react';
import { CSSTransition } from 'react-transition-group';
import { useFocusTrap, useScrollLock } from '../utils';
import { ModalBackdrop } from './ModalBackdrop';
import { ModalPortal } from './ModalPortal';
import { ModalContext } from './ModalContext';
export function Modal({ backdrop, isOpen, onClose, render, }) {
    const { callbackRef: focusRef, disable: disableFocusTrap, enable: enableFocusTrap, isEnabled: focusTrapEnabled, trapRef: focusTrapRef, } = useFocusTrap(isOpen);
    const { callbackRef: scrollRef, disable: disableScrollLock, enable: enableScrollLock, isEnabled: scrollLockEnabled, } = useScrollLock(isOpen, false);
    return (React.createElement(ModalContext.Provider, { value: {
            closeModal: onClose,
            disableFocusTrap,
            disableScrollLock,
            enableFocusTrap,
            enableScrollLock,
            focusTrapEnabled,
            focusTrapRef,
            scrollLockEnabled,
        } },
        React.createElement(CSSTransition, { classNames: "modal", mountOnEnter: true, unmountOnExit: true, in: isOpen, timeout: { enter: 0, exit: 250 } }, (state) => (React.createElement(ModalPortal, { ref: (node) => {
                focusRef(node);
                scrollRef(node);
            } },
            React.createElement(ModalBackdrop, { className: state, onClick: onClose, visible: backdrop === undefined ? true : !!backdrop, style: !!backdrop && backdrop !== true
                    ? backdrop
                    : undefined }),
            render(state))))));
}
//# sourceMappingURL=Modal.js.map