import React, { useState, useCallback, useEffect, } from 'react';
import { Button, ButtonTransparent } from '../../Button';
import { Label, InputText } from '../../Form';
import { VisuallyHidden } from '../../VisuallyHidden';
import { Dialog, ModalContent, ModalFooter, ModalHeader } from '..';
export const PromptDialog = ({ saveLabel = 'Save', cancelColor = 'neutral', cancelLabel = 'Cancel', onSave, onCancel, inputLabel, title, secondary, defaultValue = '', close, isOpen, }) => {
    const [value, setValue] = useState(defaultValue);
    const hasValue = !!value.trim();
    useEffect(() => {
        setValue(defaultValue);
    }, [defaultValue]);
    const onChange = (event) => {
        setValue(event.currentTarget.value);
    };
    const onSubmit = () => {
        onSave(value);
        close();
        setValue('');
    };
    const cancel = useCallback(() => {
        close();
        setValue('');
        onCancel && onCancel();
    }, [close, onCancel]);
    const onKeyDown = (event) => {
        if (event.key === 'Enter' && hasValue) {
            onSubmit();
        }
        else if (event.key === 'Escape') {
            cancel();
        }
    };
    return (React.createElement(Dialog, { width: "30rem", isOpen: isOpen, onClose: cancel },
        React.createElement(ModalHeader, { hideClose: true }, title),
        React.createElement(ModalContent, null,
            React.createElement(VisuallyHidden, null,
                React.createElement(Label, { htmlFor: "promptInput" }, inputLabel)),
            React.createElement(InputText, { onKeyDown: onKeyDown, id: "promptInput", placeholder: inputLabel, onChange: onChange, width: "100%", value: value })),
        React.createElement(ModalFooter, { secondary: secondary },
            React.createElement(Button, { disabled: !hasValue, type: "submit", onClick: onSubmit, color: "primary" }, saveLabel),
            React.createElement(ButtonTransparent, { type: "reset", color: cancelColor, onClick: cancel }, cancelLabel))));
};
//# sourceMappingURL=PromptDialog.js.map