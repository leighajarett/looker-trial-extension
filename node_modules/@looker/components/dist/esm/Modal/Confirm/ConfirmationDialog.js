var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React, { useCallback } from 'react';
import { Button, ButtonTransparent } from '../../Button';
import { Dialog } from '../Dialog';
import { ConfirmLayout } from './ConfirmLayout';
export const ConfirmationDialog = (_a) => {
    var { cancelLabel = 'Cancel', close, confirmLabel = 'Confirm', buttonColor = 'primary', cancelColor = 'neutral', isOpen = false, message, onCancel, onConfirm, title } = _a, props = __rest(_a, ["cancelLabel", "close", "confirmLabel", "buttonColor", "cancelColor", "isOpen", "message", "onCancel", "onConfirm", "title"]);
    const confirm = useCallback(() => {
        onConfirm(close);
    }, [close, onConfirm]);
    const cancel = useCallback(() => {
        if (onCancel) {
            onCancel(close);
        }
        else {
            close();
        }
    }, [close, onCancel]);
    return (React.createElement(Dialog, Object.assign({ isOpen: isOpen, onClose: cancel }, props),
        React.createElement(ConfirmLayout, { title: title, message: message, primaryButton: React.createElement(Button, { onClick: confirm, color: buttonColor }, confirmLabel), secondaryButton: React.createElement(ButtonTransparent, { color: cancelColor, onClick: cancel }, cancelLabel) })));
};
//# sourceMappingURL=ConfirmationDialog.js.map