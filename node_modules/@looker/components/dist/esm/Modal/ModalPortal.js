import React, { forwardRef, useEffect, useRef } from 'react';
import { createPortal } from 'react-dom';
import styled from 'styled-components';
import { getModalRoot } from './modalRoot';
export const CustomizableModalAttributes = {};
export const ModalPortal = forwardRef(({ children }, ref) => {
    const el = useRef(document.createElement('div'));
    useEffect(() => {
        const modalRoot = getModalRoot();
        if (!modalRoot)
            return;
        const elCurrent = el.current;
        modalRoot.appendChild(elCurrent);
        return () => {
            modalRoot.removeChild(elCurrent);
        };
    }, [el]);
    const content = (React.createElement(InvisiBox, { ref: ref, tabIndex: -1, zIndex: CustomizableModalAttributes.zIndex }, children));
    return createPortal(content, el.current);
});
ModalPortal.displayName = 'ModalPortal';
const InvisiBox = styled.div.withConfig({ displayName: "InvisiBox", componentId: "sc-16z53yg" }) `
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  top: 0;

  align-items: center;
  display: flex;
  justify-content: center;
  pointer-events: none;
  z-index: ${(props) => props.zIndex};

  * {
    pointer-events: auto;
  }
`;
//# sourceMappingURL=ModalPortal.js.map