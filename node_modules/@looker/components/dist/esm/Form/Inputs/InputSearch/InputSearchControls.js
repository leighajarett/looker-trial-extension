var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import { palette } from '@looker/design-tokens';
import omit from 'lodash/omit';
import React, { forwardRef } from 'react';
import styled from 'styled-components';
import { Box } from '../../../Layout';
import { IconButton } from '../../../Button';
import { Text } from '../../../Text';
export const InputSearchControlsInternal = forwardRef((_a, ref) => {
    var { onClear, showClear, summary, disabled } = _a, props = __rest(_a, ["onClear", "showClear", "summary", "disabled"]);
    if (!summary && !showClear)
        return null;
    const clear = (React.createElement(IconButton, { size: "xxsmall", icon: "Close", label: "Clear Field", onClick: onClear, tabIndex: -1, disabled: disabled }));
    const separator = (React.createElement(Box, { borderRight: `1px solid ${palette.charcoal200}`, height: "1.5rem", style: {
            pointerEvents: 'none',
        } }));
    return (React.createElement("div", Object.assign({}, omit(props, 'height'), { ref: ref }),
        summary && (React.createElement(Text, { pr: "xsmall", variant: "subdued", fontSize: "small", style: { whiteSpace: 'nowrap' } }, summary)),
        summary && showClear && separator,
        showClear && clear));
});
InputSearchControlsInternal.displayName = 'InputSearchControlsInternal';
export const InputSearchControls = styled(InputSearchControlsInternal).withConfig({ displayName: "InputSearchControls", componentId: "sc-1yoy0st" }) `
  height: ${(props) => props.height};
  display: flex;
  align-items: center;
  margin-left: auto;
`;
//# sourceMappingURL=InputSearchControls.js.map