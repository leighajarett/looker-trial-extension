import React, { useState } from 'react';
import { Fieldset } from '../../Fieldset';
import { FieldCheckbox } from '../../Fields';
export const CheckboxGroup = ({ disabled, inline, options, defaultValue = [], value, onChange, }) => {
    const [currentOptions, setCurrentOptions] = useState(value || defaultValue);
    const handleChange = (option) => {
        const newValues = currentOptions.includes(option)
            ? [...currentOptions.filter((v) => v !== option)]
            : [...currentOptions, option];
        !value && setCurrentOptions(newValues);
        onChange && onChange(newValues);
    };
    const checkboxes = options.map((option, index) => (React.createElement(FieldCheckbox, { onChange: () => handleChange(option.value), disabled: option.disabled || disabled, key: index, label: option.label, checked: currentOptions.includes(option.value), value: option.value })));
    return (React.createElement(Fieldset, { "data-testid": "checkbox-list", inline: inline }, checkboxes));
};
//# sourceMappingURL=CheckboxGroup.js.map