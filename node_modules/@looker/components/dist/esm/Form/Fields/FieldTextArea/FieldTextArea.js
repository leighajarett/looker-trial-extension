var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React from 'react';
import styled from 'styled-components';
import { useID } from '../../../utils';
import { useFormContext } from '../../Form';
import { TextArea } from '../../Inputs/TextArea';
import { Field, omitFieldProps, pickFieldProps } from '../Field';
const FieldTextAreaComponent = (_a) => {
    var props = __rest(_a, []);
    const id = useID(props.id);
    const validationMessage = useFormContext(props);
    return (React.createElement(Field, Object.assign({}, pickFieldProps(props), { id: id, validationMessage: validationMessage }),
        React.createElement(TextArea, Object.assign({}, omitFieldProps(props), { "aria-describedby": `${id}-describedby`, validationType: validationMessage && validationMessage.type }))));
};
FieldTextAreaComponent.displayName = 'FieldTextAreaComponent';
export const FieldTextArea = styled(FieldTextAreaComponent).withConfig({ displayName: "FieldTextArea", componentId: "sc-107jjv8" }) ``;
//# sourceMappingURL=FieldTextArea.js.map