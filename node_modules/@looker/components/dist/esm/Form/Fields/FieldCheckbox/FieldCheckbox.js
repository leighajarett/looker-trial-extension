import React, { forwardRef } from 'react';
import styled from 'styled-components';
import { useID } from '../../../utils';
import { useFormContext } from '../../Form';
import { Checkbox } from '../../Inputs/Checkbox/Checkbox';
import { omitFieldProps, pickFieldProps } from '../Field';
import { FieldInline } from '../FieldInline';
const FieldCheckboxLayout = forwardRef((props, ref) => {
    const validationMessage = useFormContext(props);
    const id = useID(props.id);
    return (React.createElement(FieldInline, Object.assign({}, pickFieldProps(props), { validationMessage: validationMessage, id: id }),
        React.createElement(Checkbox, Object.assign({}, omitFieldProps(props), { "aria-describedby": `${id}-describedby`, id: id, validationType: validationMessage && validationMessage.type, ref: ref }))));
});
FieldCheckboxLayout.displayName = 'FieldCheckboxLayout';
export const FieldCheckbox = styled(FieldCheckboxLayout).withConfig({ displayName: "FieldCheckbox", componentId: "sc-1clxjlu" }) ``;
//# sourceMappingURL=FieldCheckbox.js.map