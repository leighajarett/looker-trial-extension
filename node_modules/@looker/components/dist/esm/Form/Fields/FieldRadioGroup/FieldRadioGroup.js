var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React from 'react';
import styled from 'styled-components';
import { useID } from '../../../utils';
import { useFormContext } from '../../Form';
import { Field, omitFieldProps, pickFieldProps } from '../Field';
import { RadioGroup } from '../../Inputs/OptionsGroup';
const FieldRadioGroupLayout = (_a) => {
    var { id: propsID, options, name } = _a, props = __rest(_a, ["id", "options", "name"]);
    const validationMessage = useFormContext(props);
    const id = useID(propsID);
    return (React.createElement(Field, Object.assign({}, pickFieldProps(props), { validationMessage: validationMessage, id: id }),
        React.createElement(RadioGroup, Object.assign({}, omitFieldProps(props), { "aria-describedby": `${id}-describedby`, "aria-labeledby": `${id}-labeledby`, id: id, inline: props.inline, name: name || id, options: options }))));
};
FieldRadioGroupLayout.displayName = 'FieldRadioGroupLayout';
export const FieldRadioGroup = styled(FieldRadioGroupLayout).withConfig({ displayName: "FieldRadioGroup", componentId: "sc-131zwk0" }) ``;
//# sourceMappingURL=FieldRadioGroup.js.map