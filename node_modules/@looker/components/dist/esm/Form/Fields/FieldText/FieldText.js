import React, { forwardRef } from 'react';
import styled from 'styled-components';
import { useID } from '../../../utils';
import { useFormContext } from '../../Form';
import { InputText } from '../../Inputs/InputText/InputText';
import { Field, omitFieldProps, pickFieldProps } from '../Field';
const FieldTextComponent = forwardRef((props, ref) => {
    const id = useID(props.id);
    const validationMessage = useFormContext(props);
    return (React.createElement(Field, Object.assign({ id: id, validationMessage: validationMessage }, pickFieldProps(props)),
        React.createElement(InputText, Object.assign({}, omitFieldProps(props), { id: id, "aria-describedby": `${id}-describedby`, validationType: validationMessage && validationMessage.type, ref: ref }))));
});
FieldTextComponent.displayName = 'FieldTextComponent';
export const FieldText = styled(FieldTextComponent).withConfig({ displayName: "FieldText", componentId: "sc-1oy731f" }) ``;
//# sourceMappingURL=FieldText.js.map