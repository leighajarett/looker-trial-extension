import { ITransportSettings } from './transport';
import { IApiSection } from './nodeSettings';
export interface IValueSettings {
    [name: string]: string;
}
export declare const strLookerBaseUrl: string;
export declare const strLookerVerifySsl: string;
export declare const strLookerTimeout: string;
export declare const strLookerClientId: string;
export declare const strLookerClientSecret: string;
export declare const ApiConfigMap: IValueSettings;
export declare const strBadConfiguration: string;
export interface IApiSettings extends ITransportSettings {
    readConfig(section?: string): IApiSection;
    isConfigured(): boolean;
}
export declare const DefaultSettings: () => IApiSettings;
export declare const configValue: (values: IValueSettings, name: string) => string;
export declare const ValueSettings: (values: IValueSettings) => IApiSettings;
export declare class ApiSettings implements IApiSettings {
    base_url: string;
    verify_ssl: boolean;
    timeout: number;
    agentTag: string;
    constructor(settings: Partial<IApiSettings>);
    isConfigured(): boolean;
    readConfig(section?: string): IApiSection;
}
