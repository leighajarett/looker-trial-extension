import { Looker31SDK } from '@looker/sdk/dist/sdk/3.1/methods';
import { Looker40SDK } from '@looker/sdk/dist/sdk/4.0/methods';
/**
 * Register the core 3.1 SDK. The ExtensionProvider will automatically
 * call this when connection with the host suceeds. An extension should
 * never call this
 * @param coreSDK core sdk
 */
export declare const registerCore31SDK: (coreSDK: Looker31SDK) => void;
export declare const registerCoreSDK: (coreSDK: Looker31SDK) => void;
/**
 * Unregister the core SDK.
 */
export declare const unregisterCore31SDK: () => undefined;
/**
 * Unregister the core SDK.
 * @deprecated use unregisterCore31SDK instead
 */
export declare const unregisterCoreSDK: () => undefined;
/**
 * Global access to the coreSDK. An error will be thrown if accessed prematurely.
 */
export declare const getCore31SDK: () => Looker31SDK;
/**
 * Global access to the coreSDK. An error will be thrown if accessed prematurely.
 * @deprecated use getCore31SDK instead
 */
export declare const getCoreSDK: () => Looker31SDK;
/**
 * Register the core 4.0 SDK. The ExtensionProvider will automatically
 * call this when connection with the host suceeds. An extension should
 * never call this
 * @param coreSDK core sdk
 */
export declare const registerCore40SDK: (coreSDK: Looker40SDK) => void;
/**
 * Unregister the core 4.0 SDK.
 */
export declare const unregisterCore40SDK: () => undefined;
/**
 * Global access to the core40SDK. An error will be thrown if accessed prematurely.
 */
export declare const getCore40SDK: () => Looker40SDK;
