{"version":3,"sources":["../../../src/components/ExtensionProvider/ExtensionProvider.tsx"],"names":["ExtensionContext","React","createContext","undefined","initializeFailedMessage","createTempExtensionHostApi","invokeCoreSdkByPath","Promise","reject","verifyHostConnection","handleNotification","clientRouteChanged","updateTitle","updateLocation","openBrowserWindow","closeHostPopovers","localStorageGetItem","localStorageSetItem","localStorageRemoveItem","track","error","ExtensionProvider","onPathnameChange","onRouteChange","hostTracksRoute","loadingComponent","requiredLookerVersion","children","initialRouteData","setInitialRouteData","route","hostRouteData","setHostRouteData","hostInitializedTimerId","initializing","setInitializing","useState","extensionSDK","coreSDK","core31SDK","core40SDK","extensionData","setExtensionData","initialized","errorMessage","window","clearTimeout","current","previousState","initializeError","useEffect","setInitialRouteAndRouteState","routeState","hostChangedRoute","_route","startsWith","setTimeout","console","initializedCallback","setInitialRoute","then","extensionHost","LookerExtensionSDK","create31Client","create40Client","message","onBodyMousedown","body","document","querySelector","addEventListener","removeEventListener","ExportWrapper"],"mappings":"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","sourcesContent":["/*\n * The MIT License (MIT)\n *\n * Copyright (c) 2019 Looker Data Sciences, Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nimport isEqual from 'lodash/isEqual'\nimport React, { useState, useRef } from 'react'\nimport { MemoryRouter } from 'react-router-dom'\nimport { LookerExtensionSDK, connectExtensionHost, ExtensionHostApi } from '@looker/extension-sdk'\nimport { Looker31SDK } from '@looker/sdk/dist/sdk/3.1/methods'\nimport { ExtensionProviderProps, ExtensionContextData, RouteData } from './types'\nimport { RouteChangeListener } from './components/RouteChangeListener'\nimport { registerCore31SDK, registerCore40SDK, unregisterCore31SDK, unregisterCore40SDK } from '../../sdk/core_sdk'\nimport { Looker40SDK } from '@looker/sdk/dist/sdk/4.0/methods'\nimport { getInitialRouteEntries } from './utils/get_initial_route_entries'\n\n/**\n * React context provider for extension API and SDK\n */\nexport const ExtensionContext = React.createContext<ExtensionContextData>(\n  undefined as any // no one will ever see this undefined!\n)\n\nconst initializeFailedMessage = 'Failed to establish communication with Looker host'\n\n/**\n * The ExtensionContextData interface requires that there is an ExtensionHostApi.\n * Now that error handling has been added, the ExtensionHostApi is no longer\n * always available. Provide a dummy implementation.\n */\nconst createTempExtensionHostApi = (): ExtensionHostApi => ({\n  invokeCoreSdkByPath: () => Promise.reject(),\n  verifyHostConnection: () => Promise.reject(),\n  handleNotification: () => {},\n  clientRouteChanged: () => {},\n  updateTitle: () => {},\n  updateLocation: () => {},\n  openBrowserWindow: () => {},\n  closeHostPopovers: () => {},\n  localStorageGetItem: () => Promise.reject(),\n  localStorageSetItem: () => Promise.reject(),\n  localStorageRemoveItem: () => Promise.reject(),\n  track: () => {},\n  error: () => {},\n})\n\n/**\n * ExtensionProvider component. Provides access to the extension API and SDK (use\n * ExtensionContext) and react routing services.\n */\nexport const ExtensionProvider: React.FC<ExtensionProviderProps> = ({\n  onPathnameChange,\n  onRouteChange,\n  hostTracksRoute = true,\n  loadingComponent,\n  requiredLookerVersion,\n  children,\n}) => {\n  const [initialRouteData, setInitialRouteData] = useState<RouteData>()\n  const [hostRouteData, setHostRouteData] = useState<RouteData>({ route: '' })\n  const hostInitializedTimerId = useRef(0)\n  const [initializing, setInitializing] = useState(true)\n  const [extensionData, setExtensionData] = React.useState<ExtensionContextData>({\n    extensionSDK: createTempExtensionHostApi(),\n    coreSDK: {} as Looker31SDK,\n    core31SDK: {} as Looker31SDK,\n    core40SDK: {} as Looker40SDK,\n  })\n\n  const initialized = (errorMessage?: string) => {\n    window.clearTimeout(hostInitializedTimerId.current)\n    setInitializing(false)\n    if (errorMessage) {\n      setExtensionData((previousState: ExtensionContextData) => {\n        return {\n          ...previousState,\n          initializeError: errorMessage,\n        }\n      })\n    }\n  }\n\n  React.useEffect(() => {\n    return () => {\n      unregisterCore31SDK()\n      unregisterCore40SDK()\n    }\n  }, [])\n\n  const setInitialRouteAndRouteState = (route: string, routeState?: any) => {\n    if (hostTracksRoute) {\n      setInitialRouteData({ route, routeState })\n    }\n  }\n\n  const hostChangedRoute = (_route: string, routeState?: any) => {\n    const route = _route.startsWith('/') ? _route : '/' + _route\n    if (route !== hostRouteData.route || !isEqual(routeState, hostRouteData.routeState)) {\n      setHostRouteData({ route, routeState })\n    }\n  }\n\n  React.useEffect(() => {\n    hostInitializedTimerId.current = window.setTimeout(() => {\n      console.error('Failed to establish host connection')\n      setInitializing(false)\n      setExtensionData((previousState: ExtensionContextData) => {\n        return {\n          ...previousState,\n          initializeError: initializeFailedMessage,\n          extensionSDK: createTempExtensionHostApi(),\n        }\n      })\n    }, 10000)\n    connectExtensionHost({\n      initializedCallback: initialized,\n      setInitialRoute: setInitialRouteAndRouteState,\n      requiredLookerVersion,\n      hostChangedRoute,\n    })\n      .then((extensionHost) => {\n        setExtensionData((previousState: ExtensionContextData) => {\n          const core31SDK: Looker31SDK = LookerExtensionSDK.create31Client(extensionHost)\n          const core40SDK: Looker40SDK = LookerExtensionSDK.create40Client(extensionHost)\n          // Provide global access for use by redux if needed\n          registerCore31SDK(core31SDK)\n          registerCore40SDK(core40SDK)\n          return {\n            ...previousState,\n            extensionSDK: extensionHost,\n            coreSDK: core31SDK,\n            core31SDK,\n            core40SDK,\n          }\n        })\n      })\n      .catch((error) => {\n        console.error(error)\n        window.clearTimeout(hostInitializedTimerId.current)\n        setInitializing(false)\n        setExtensionData((previousState: ExtensionContextData) => {\n          return {\n            ...previousState,\n            initializeError: error.message ? error.message : initializeFailedMessage,\n            extensionSDK: createTempExtensionHostApi(),\n          }\n        })\n      })\n  }, [])\n\n  React.useEffect(() => {\n    const onBodyMousedown = () => {\n      if (extensionData && extensionData.extensionSDK) {\n        extensionData.extensionSDK.closeHostPopovers()\n      }\n    }\n    let body: HTMLBodyElement | undefined | null\n    if (!initializing) {\n      body = document.querySelector('body')\n      if (body) {\n        body.addEventListener('mousedown', onBodyMousedown)\n      }\n    }\n    return () => {\n      if (body) {\n        body.removeEventListener('mousedown', onBodyMousedown)\n      }\n    }\n  }, [initializing])\n\n  return (\n    <>\n      {initializing && loadingComponent}\n      {hostTracksRoute && !initializing && (\n        <MemoryRouter initialEntries={getInitialRouteEntries(initialRouteData)}>\n          <RouteChangeListener\n            onRouteChange={onRouteChange}\n            onPathnameChange={onPathnameChange}\n            extensionHost={extensionData!.extensionSDK}\n            hostRoute={hostRouteData.route}\n            hostRouteState={hostRouteData.routeState}\n          />\n          <ExtensionContext.Provider value={extensionData!}>{children}</ExtensionContext.Provider>\n        </MemoryRouter>\n      )}\n      {!hostTracksRoute && !initializing && (\n        <ExtensionContext.Provider value={extensionData!}>{children}</ExtensionContext.Provider>\n      )}\n    </>\n  )\n}\n\n/**\n * @deprecated use ExtensionProvider instead\n */\nexport const ExportWrapper = ExtensionProvider\n"],"file":"ExtensionProvider.js"}